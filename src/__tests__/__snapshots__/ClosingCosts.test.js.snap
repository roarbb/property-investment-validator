// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header matches snapshot 1`] = `
<ClosingCosts
  stores={
    Object {
      "rootStore": RootStore {
        "investmentStore": InvestmentStore {
          "closingCosts": 200,
          "downPaymentPercentage": 0,
          "expenseLabels": Object {},
          "expensePrices": Object {},
          "monthlyRentalIncome": 0,
          "purchasePrice": 0,
          "rehabPrice": 0,
        },
      },
    }
  }
>
  <FormItem
    hasFeedback={false}
    label={
      <span>
        Closing Costs 
        <Tooltip
          arrowPointAtCenter={false}
          autoAdjustOverflow={true}
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          placement="top"
          title="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
          transitionName="zoom-big-fast"
        >
          <Icon
            type="question-circle-o"
          />
        </Tooltip>
      </span>
    }
  >
    <Row
      className="ant-form-item"
      gutter={0}
      key="row"
    >
      <div
        className="ant-row ant-form-item"
      >
        <Col
          className="ant-form-item-label"
        >
          <div
            className="ant-col ant-form-item-label"
          >
            <label
              className=""
              htmlFor={null}
              onClick={[Function]}
              title=""
            >
              <span>
                Closing Costs 
                <Tooltip
                  arrowPointAtCenter={false}
                  autoAdjustOverflow={true}
                  mouseEnterDelay={0.1}
                  mouseLeaveDelay={0.1}
                  placement="top"
                  title="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
                  transitionName="zoom-big-fast"
                >
                  <Tooltip
                    align={Object {}}
                    arrowContent={null}
                    arrowPointAtCenter={false}
                    autoAdjustOverflow={true}
                    builtinPlacements={
                      Object {
                        "bottom": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tc",
                            "bc",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "bottomLeft": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tl",
                            "bl",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "bottomRight": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tr",
                            "br",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "left": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            -4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "cr",
                            "cl",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "leftBottom": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            -4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "br",
                            "bl",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "leftTop": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            -4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tr",
                            "tl",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "right": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "cl",
                            "cr",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "rightBottom": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "bl",
                            "br",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "rightTop": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            4,
                            0,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "tl",
                            "tr",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "top": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "bc",
                            "tc",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "topLeft": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "bl",
                            "tl",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                        "topRight": Object {
                          "ignoreShake": true,
                          "offset": Array [
                            0,
                            -4,
                          ],
                          "overflow": Object {
                            "adjustX": 1,
                            "adjustY": 1,
                          },
                          "points": Array [
                            "br",
                            "tr",
                          ],
                          "targetOffset": Array [
                            0,
                            0,
                          ],
                        },
                      }
                    }
                    destroyTooltipOnHide={false}
                    mouseEnterDelay={0.1}
                    mouseLeaveDelay={0.1}
                    onPopupAlign={[Function]}
                    onVisibleChange={[Function]}
                    overlay="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
                    placement="top"
                    prefixCls="ant-tooltip"
                    title="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
                    transitionName="zoom-big-fast"
                    trigger={
                      Array [
                        "hover",
                      ]
                    }
                    visible={false}
                  >
                    <Trigger
                      action={
                        Array [
                          "hover",
                        ]
                      }
                      afterPopupVisibleChange={[Function]}
                      arrowContent={null}
                      arrowPointAtCenter={false}
                      autoAdjustOverflow={true}
                      blurDelay={0.15}
                      builtinPlacements={
                        Object {
                          "bottom": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tc",
                              "bc",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "bottomLeft": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tl",
                              "bl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "bottomRight": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tr",
                              "br",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "left": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              -4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "cr",
                              "cl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "leftBottom": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              -4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "br",
                              "bl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "leftTop": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              -4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tr",
                              "tl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "right": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "cl",
                              "cr",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "rightBottom": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bl",
                              "br",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "rightTop": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              4,
                              0,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "tl",
                              "tr",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "top": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bc",
                              "tc",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "topLeft": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bl",
                              "tl",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                          "topRight": Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "br",
                              "tr",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          },
                        }
                      }
                      defaultPopupVisible={false}
                      destroyPopupOnHide={false}
                      focusDelay={0}
                      getDocument={[Function]}
                      getPopupClassNameFromAlign={[Function]}
                      hideAction={Array []}
                      mask={false}
                      maskClosable={true}
                      mouseEnterDelay={0.1}
                      mouseLeaveDelay={0.1}
                      onPopupAlign={[Function]}
                      onPopupVisibleChange={[Function]}
                      overlay="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
                      popup={[Function]}
                      popupAlign={Object {}}
                      popupClassName=""
                      popupPlacement="top"
                      popupStyle={Object {}}
                      popupTransitionName="zoom-big-fast"
                      popupVisible={false}
                      prefixCls="ant-tooltip"
                      showAction={Array []}
                      title="Closing costs are fees paid at the closing of a real estate transaction (Brokerage Commission, Mortgage Application Fees, Document or Transaction Stamps or Taxes, ...)"
                      visible={false}
                    >
                      <Icon
                        key="trigger"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        type="question-circle-o"
                      >
                        <LocaleReceiver
                          componentName="Icon"
                        >
                          <i
                            aria-label="icon: question-circle-o"
                            className="anticon anticon-question-circle-o"
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            <IconReact
                              className=""
                              type="question-circle-o"
                            >
                              <svg
                                aria-hidden="true"
                                className=""
                                data-icon="question-circle"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                key="svg-question-circle"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
                                  key="svg-question-circle-svg-0"
                                />
                                <path
                                  d="M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0 1 30.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"
                                  key="svg-question-circle-svg-1"
                                />
                              </svg>
                            </IconReact>
                          </i>
                        </LocaleReceiver>
                      </Icon>
                    </Trigger>
                  </Tooltip>
                </Tooltip>
              </span>
            </label>
          </div>
        </Col>
        <Col
          className="ant-form-item-control-wrapper"
        >
          <div
            className="ant-col ant-form-item-control-wrapper"
          >
            <div
              className="ant-form-item-control"
            >
              <span
                className="ant-form-item-children"
              >
                <InputNumber
                  formatter={[Function]}
                  onChange={[Function]}
                  parser={[Function]}
                  step={1}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <InputNumber
                    autoComplete="off"
                    className=""
                    downHandler={
                      <Icon
                        className="ant-input-number-handler-down-inner"
                        type="down"
                      />
                    }
                    focusOnUpDown={true}
                    formatter={[Function]}
                    min={-9007199254740991}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    parser={[Function]}
                    prefixCls="ant-input-number"
                    required={false}
                    step={1}
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                    upHandler={
                      <Icon
                        className="ant-input-number-handler-up-inner"
                        type="up"
                      />
                    }
                    useTouch={false}
                  >
                    <div
                      className="ant-input-number"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <div
                        className="ant-input-number-handler-wrap"
                      >
                        <InputHandler
                          aria-disabled={false}
                          aria-label="Increase Value"
                          className="ant-input-number-handler ant-input-number-handler-up "
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          prefixCls="ant-input-number"
                          role="button"
                          unselectable="unselectable"
                        >
                          <TouchFeedback
                            activeClassName="ant-input-number-handler-active"
                            disabled={false}
                          >
                            <span
                              aria-disabled={false}
                              aria-label="Increase Value"
                              className="ant-input-number-handler ant-input-number-handler-up "
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchCancel={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              unselectable="unselectable"
                            >
                              <Icon
                                className="ant-input-number-handler-up-inner"
                                type="up"
                              >
                                <LocaleReceiver
                                  componentName="Icon"
                                >
                                  <i
                                    aria-label="icon: up"
                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                  >
                                    <IconReact
                                      className=""
                                      type="up-o"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="up"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-up"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 0 0 140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                          key="svg-up-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </i>
                                </LocaleReceiver>
                              </Icon>
                            </span>
                          </TouchFeedback>
                        </InputHandler>
                        <InputHandler
                          aria-disabled={false}
                          aria-label="Decrease Value"
                          className="ant-input-number-handler ant-input-number-handler-down "
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          prefixCls="ant-input-number"
                          role="button"
                          unselectable="unselectable"
                        >
                          <TouchFeedback
                            activeClassName="ant-input-number-handler-active"
                            disabled={false}
                          >
                            <span
                              aria-disabled={false}
                              aria-label="Decrease Value"
                              className="ant-input-number-handler ant-input-number-handler-down "
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchCancel={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              unselectable="unselectable"
                            >
                              <Icon
                                className="ant-input-number-handler-down-inner"
                                type="down"
                              >
                                <LocaleReceiver
                                  componentName="Icon"
                                >
                                  <i
                                    aria-label="icon: down"
                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                  >
                                    <IconReact
                                      className=""
                                      type="down-o"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="down"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-down"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                          key="svg-down-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </i>
                                </LocaleReceiver>
                              </Icon>
                            </span>
                          </TouchFeedback>
                        </InputHandler>
                      </div>
                      <div
                        aria-valuemin={-9007199254740991}
                        className="ant-input-number-input-wrap"
                        role="spinbutton"
                      >
                        <input
                          autoComplete="off"
                          className="ant-input-number-input"
                          min={-9007199254740991}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseUp={[Function]}
                          required={false}
                          step={1}
                          value="$ "
                        />
                      </div>
                    </div>
                  </InputNumber>
                </InputNumber>
              </span>
              <Animate
                animation={Object {}}
                component=""
                componentProps={Object {}}
                key="help"
                onAppear={[Function]}
                onEnd={[Function]}
                onEnter={[Function]}
                onLeave={[Function]}
                transitionAppear={true}
                transitionEnter={true}
                transitionLeave={true}
                transitionName="show-help"
              />
            </div>
          </div>
        </Col>
      </div>
    </Row>
  </FormItem>
</ClosingCosts>
`;
